version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: blogs_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: blogs_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - blogs_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d blogs_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blogs_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:password123@db:5432/blogs_db
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - blogs_network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  blogs_network:
    driver: bridge